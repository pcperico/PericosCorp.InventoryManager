<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
 <class name="PericosCorp.InventoryManager.Domain.Entities.Product" table="product">    
   <id column="Id" name="Id" >
     <generator class="native" />
   </id> 
   <property column="Name" name="Name" type="string" />
   <property column="Description" name="Description" type="string" />
   <property column="Brand" name="Brand" type="string"  />
   <property column="Model" name="Model" type="string"  />
   <property column="PriceCost" name="PriceCost" type="double"  />
   <property column="Stock" name="Stock" type="double"  />
   <property column="PriceSale" name="PriceSale" type="double"  />
   <many-to-one name="ProductCategory" class="PericosCorp.InventoryManager.Domain.Entities.ProductCategory" fetch="select" lazy="false">
            <column name="ProductCategory_Id" not-null="true" />
   </many-to-one>
   <many-to-one name="Provider" class="PericosCorp.InventoryManager.Domain.Entities.Provider" lazy="false" fetch="select">
            <column name="Provider_Id" not-null="true" />
   </many-to-one>
   <many-to-one name="MeasurementUnit" class="PericosCorp.InventoryManager.Domain.Entities.MeasurementUnit" lazy="false" fetch="select">
            <column name="MeasurementUnit_Id" not-null="true" />
   </many-to-one>
 </class>
 <sql-query name="Product.FindByName">    
    <return-scalar column="Id" type="int"/>
    <return-scalar column="Name" type="string"/>
    <return-scalar column="Category" type="string"/>
    <return-scalar column="Provider" type="string"/>
    <return-scalar column="Stock" type="double"/>
    <return-scalar column="PriceCost" type="double"/>    
    <return-scalar column="PriceSale" type="double"/>    
    	select  p.Id , p.Name, pc.Name as Category, prov.Name as Provider, p.Stock,p.PriceCost,p.PriceSale
		from product p inner join productcategory pc
			on pc.id = p.ProductCategory_Id
    		inner join provider prov
    		on prov.id = p.Provider_Id
		where p.Name like :name        
  </sql-query>  
  
  <sql-query name="Product.FindByProvider">    
    <return-scalar column="Id" type="int"/>
    <return-scalar column="Name" type="string"/>
    <return-scalar column="Category" type="string"/>
    <return-scalar column="Provider" type="string"/>    
    <return-scalar column="Stock" type="double"/>
    <return-scalar column="PriceCost" type="double"/>    
    <return-scalar column="PriceSale" type="double"/>    
    	select  p.Id , p.Name, pc.Name as Category, prov.Name as Provider, p.Stock,p.PriceCost,p.PriceSale
		from product p inner join productcategory pc
			on pc.id = p.ProductCategory_Id
    		inner join provider prov
    		on prov.id = p.Provider_Id
		where p.Provider_id = :providerId        
  </sql-query>  
</hibernate-mapping>